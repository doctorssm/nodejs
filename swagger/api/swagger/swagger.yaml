swagger: "2.0"
info:
  description: |
    This is a sample CRM server.
  version: 1.0.0
  title: SAGA API
host: localhost:3007
basePath: /
tags:
- name: orders
  description: User Orders
- name: customers
  description: Customers
schemes:
- https
- http
paths:
  /orders:
    get:
      tags:
      - orders
      summary: Get all orders
      description: Returns all orders from store
      parameters: []
      responses:
        200:
          description: OK
        400:
          description: Bad Request
    post:
      tags:
      - orders
      summary: Add a new order
      description: Add new order in to the store
      parameters:
      - in: body
        name: body
        description: Order object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        200:
          description: OK
        400:
          description: Invalid Order
  /orders/{ids}:
    put:
      tags:
      - orders
      summary: Update orders by ids
      description: Update orders in the store
      parameters:
      - name: ids
        in: path
        description: ID of orders that needs to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Order object that needs to be updated in the db
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        200:
          description: OK
        404:
          description: Order not found
    delete:
      tags:
      - orders
      summary: Delete orders by ids
      description: Delete orders from the store
      parameters:
      - name: ids
        in: path
        description: ID of orders that needs to be deleted
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        404:
          description: Order not found
  /customers:
    get:
      tags:
      - customers
      summary: Get all customers
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        200:
          description: OK
        400:
          description: Bad Request
    post:
      tags:
      - customers
      summary: Add a new customer to the store
      parameters:
      - in: body
        name: body
        description: Customer object that needs to be added to the db
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        200:
          description: OK
        400:
          description: Invalid Customer
  /customers/{id}:
    put:
      tags:
      - customers
      summary: Update customer by id
      parameters:
      - name: id
        in: path
        description: ID of customer that needs to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Customer object that needs to be updated in the db
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        200:
          description: OK
        404:
          description: Customer not found
    delete:
      tags:
      - customers
      summary: Delete customers by ids
      parameters:
      - name: id
        in: path
        description: ID of customers that needs to be deleted
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        404:
          description: Customer not found
definitions:
  Order:
    type: object
    properties:
      orderId:
        type: string
      status:
        type: number
        format: int32
      customer:
        $ref: '#/definitions/Customer'
      payment:
        type: number
        format: int32
      delivery:
        $ref: '#/definitions/Order_delivery'
      comment:
        type: string
    xml:
      name: Order
  Customer:
    type: object
    properties:
      customerId:
        type: integer
        format: int32
      name:
        type: string
      phone:
        type: string
      email:
        type: string
      comment:
        type: string
    xml:
      name: Customer
  Order_delivery:
    properties:
      company:
        type: number
        format: int32
      address:
        type: string
      ttn:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
